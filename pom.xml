<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.devops.demo</groupId>
	<artifactId>mysocks</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>
	<name>mysocks</name>
	<description>Spring Boot project with security, database management, and
		microservices</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.3</version>
		<relativePath /> <!-- Lookup from Maven repository -->
	</parent>

	<properties>
		<java.version>21</java.version>
		<maven.compiler.source>21</maven.compiler.source>
		<maven.compiler.target>21</maven.compiler.target>
		<mysql.connector.version>8.0.33</mysql.connector.version>
		<httpclient5.version>5.2.3</httpclient5.version>
		<httpcore5.version>5.2.4</httpcore5.version>
		<bouncycastle.version>1.76</bouncycastle.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<!-- Spring Boot Starters -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.session</groupId>
			<artifactId>spring-session-jdbc</artifactId>
		</dependency>

		<!-- HikariCP -->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
		</dependency>

		<!-- MySQL Driver -->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<version>${mysql.connector.version}</version>
		</dependency>

		<!-- DevTools (Optional) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- JWT Authentication -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>0.11.5</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>0.11.5</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>0.11.5</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Apache HTTP Client -->
		<dependency>
			<groupId>org.apache.httpcomponents.client5</groupId>
			<artifactId>httpclient5</artifactId>
			<version>${httpclient5.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents.core5</groupId>
			<artifactId>httpcore5</artifactId>
			<version>${httpcore5.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents.client5</groupId>
			<artifactId>httpclient5-fluent</artifactId>
			<version>5.3</version>
		</dependency>

		<!-- Bouncy Castle (SSL Support) -->
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk18on</artifactId>
			<version>${bouncycastle.version}</version>
		</dependency>

		<!-- Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Servlet API -->
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Spring Boot Test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.11.0</version>
				<configuration>
					<release>21</release>
				</configuration>
			</plugin>


			<!-- Exec Plugin: Moves JAR to ${env.MYSOCKS_HOME}/bin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>copy-bin</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>cmd</executable>
							<arguments>
								<argument>/c</argument>
								<argument>if not exist "%MYSOCKS_HOME%\\bin" mkdir "%MYSOCKS_HOME%\\bin" &amp;&amp; copy /Y target\\mysocks-1.0.0.jar "%MYSOCKS_HOME%\\bin\\mysocks-1.0.0.jar"</argument>
							</arguments>
						</configuration>
					</execution>
					<!-- Execution for config -->
					<execution>
						<id>copy-config</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>cmd</executable>
							<arguments>
								<argument>/c</argument>
								<argument>if not exist "%MYSOCKS_HOME%\\config" mkdir "%MYSOCKS_HOME%\\config" &amp;&amp; xcopy /E /H /C /I /Y target\\classes\\config "%MYSOCKS_HOME%\\config"</argument>
							</arguments>
						</configuration>
					</execution>
					<!-- Execution for database_script -->
					<execution>
						<id>copy-database_script</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>cmd</executable>
							<arguments>
								<argument>/c</argument>
								<argument>if not exist "%MYSOCKS_HOME%\\database_script" mkdir "%MYSOCKS_HOME%\\database_script" &amp;&amp; xcopy /E /H /C /I /Y target\\classes\\database_script "%MYSOCKS_HOME%\\database_script"</argument>
							</arguments>
						</configuration>
					</execution>
					<!-- Execution for security -->
					<execution>
						<id>copy-security</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>cmd</executable>
							<arguments>
								<argument>/c</argument>
								<argument>if not exist "%MYSOCKS_HOME%\\security" mkdir "%MYSOCKS_HOME%\\security" &amp;&amp; xcopy /E /H /C /I /Y target\\classes\\security "%MYSOCKS_HOME%\\security"</argument>
							</arguments>
						</configuration>
					</execution>
					<!-- Execution for static -->
					<execution>
						<id>copy-static</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>cmd</executable>
							<arguments>
								<argument>/c</argument>
								<argument>if not exist "%MYSOCKS_HOME%\\gui" mkdir "%MYSOCKS_HOME%\\gui" &amp;&amp; if not exist "%MYSOCKS_HOME%\\gui\\static" mkdir "%MYSOCKS_HOME%\\gui\\static" &amp;&amp; xcopy /E /H /C /I /Y target\\classes\\static "%MYSOCKS_HOME%\\gui\\static"</argument>
							</arguments>
						</configuration>
					</execution>
					<!-- Execution for templates -->
					<execution>
						<id>copy-templates</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>cmd</executable>
							<arguments>
								<argument>/c</argument>
								<argument>if not exist "%MYSOCKS_HOME%\\gui\\templates" mkdir "%MYSOCKS_HOME%\\gui\\templates" &amp;&amp; xcopy /E /H /C /I /Y target\\classes\\templates "%MYSOCKS_HOME%\\gui\\templates"</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Clean Plugin: Removes ${env.MYSOCKS_HOME}/bin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>

				<executions>
					<execution>
						<phase>clean</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo message="Deleting ${env.MYSOCKS_HOME}/bin" />
								<echo
									message="Deleting contents of ${project.build.directory}" />
								<delete dir="${env.MYSOCKS_HOME}\" />
								<delete dir="${project.build.directory}">
									<include name="**/*" />
								</delete>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>